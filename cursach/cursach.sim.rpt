Simulator report for cursach
Sun May 14 21:14:32 2017
Quartus II Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 1.0 us       ;
; Simulation Netlist Size     ; 260 nodes    ;
; Simulation Coverage         ;      22.90 % ;
; Total Number of Transitions ; 1290         ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Stratix II   ;
+-----------------------------+--------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                      ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Option                                                                                     ; Setting    ; Default Value ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Simulation mode                                                                            ; Functional ; Timing        ;
; Start time                                                                                 ; 0 ns       ; 0 ns          ;
; Simulation results format                                                                  ; CVWF       ;               ;
; Vector input source                                                                        ; stack.vwf  ;               ;
; Add pins automatically to simulation output waveforms                                      ; On         ; On            ;
; Check outputs                                                                              ; Off        ; Off           ;
; Report simulation coverage                                                                 ; On         ; On            ;
; Display complete 1/0 value coverage report                                                 ; On         ; On            ;
; Display missing 1-value coverage report                                                    ; On         ; On            ;
; Display missing 0-value coverage report                                                    ; On         ; On            ;
; Detect setup and hold time violations                                                      ; Off        ; Off           ;
; Detect glitches                                                                            ; Off        ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off        ; Off           ;
; Generate Signal Activity File                                                              ; Off        ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off        ; Off           ;
; Group bus channels in simulation results                                                   ; Off        ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On         ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off        ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; On         ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto       ; Auto          ;
+--------------------------------------------------------------------------------------------+------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      22.90 % ;
; Total nodes checked                                 ; 260          ;
; Total output ports checked                          ; 262          ;
; Total output ports with complete 1/0-value coverage ; 60           ;
; Total output ports with no 1/0-value coverage       ; 91           ;
; Total output ports with no 1-value coverage         ; 193          ;
; Total output ports with no 0-value coverage         ; 100          ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                                                                                                                                     ;
+-------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                                                   ; Output Port Name                                                                                               ; Output Port Type ;
+-------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+------------------+
; |stack|empty                                                                                                ; |stack|empty                                                                                                   ; pin_out          ;
; |stack|pointer[2]                                                                                           ; |stack|pointer[2]                                                                                              ; pin_out          ;
; |stack|pointer[1]                                                                                           ; |stack|pointer[1]                                                                                              ; pin_out          ;
; |stack|pointer[0]                                                                                           ; |stack|pointer[0]                                                                                              ; pin_out          ;
; |stack|inst33                                                                                               ; |stack|inst33                                                                                                  ; out0             ;
; |stack|full                                                                                                 ; |stack|full                                                                                                    ; pin_out          ;
; |stack|inst35                                                                                               ; |stack|inst35                                                                                                  ; out0             ;
; |stack|push                                                                                                 ; |stack|push                                                                                                    ; out              ;
; |stack|enable                                                                                               ; |stack|enable                                                                                                  ; out              ;
; |stack|inst28                                                                                               ; |stack|inst28                                                                                                  ; out0             ;
; |stack|inst31                                                                                               ; |stack|inst31                                                                                                  ; out0             ;
; |stack|inst36                                                                                               ; |stack|inst36                                                                                                  ; out0             ;
; |stack|pop                                                                                                  ; |stack|pop                                                                                                     ; out              ;
; |stack|out[3]                                                                                               ; |stack|out[3]                                                                                                  ; pin_out          ;
; |stack|out[2]                                                                                               ; |stack|out[2]                                                                                                  ; pin_out          ;
; |stack|out[1]                                                                                               ; |stack|out[1]                                                                                                  ; pin_out          ;
; |stack|out[0]                                                                                               ; |stack|out[0]                                                                                                  ; pin_out          ;
; |stack|out~11                                                                                               ; |stack|out~11                                                                                                  ; out0             ;
; |stack|out~12                                                                                               ; |stack|out~12                                                                                                  ; out0             ;
; |stack|out~13                                                                                               ; |stack|out~13                                                                                                  ; out0             ;
; |stack|out~14                                                                                               ; |stack|out~14                                                                                                  ; out0             ;
; |stack|data[3]                                                                                              ; |stack|data[3]                                                                                                 ; out              ;
; |stack|data[2]                                                                                              ; |stack|data[2]                                                                                                 ; out              ;
; |stack|data[1]                                                                                              ; |stack|data[1]                                                                                                 ; out              ;
; |stack|data[0]                                                                                              ; |stack|data[0]                                                                                                 ; out              ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[3]                                                       ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[3]                                                          ; regout           ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[3]                                           ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[3]                                              ; out              ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[0]                                           ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[0]                                              ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[2]                                           ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[2]                                              ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[1]                                           ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[1]                                              ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[2]                                           ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[2]                                              ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[0]                                           ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[0]                                              ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[2]                                           ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[2]                                              ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[1]                                           ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[1]                                              ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[0]                                           ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[0]                                              ; out              ;
; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode19w[3]           ; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode19w[3]              ; out0             ;
; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode19w[2]           ; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode19w[2]              ; out0             ;
; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode30w[3]           ; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode30w[3]              ; out0             ;
; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode30w[2]           ; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode30w[2]              ; out0             ;
; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode41w[3]           ; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode41w[3]              ; out0             ;
; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode41w[2]           ; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode41w[2]              ; out0             ;
; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode52w[3]           ; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode52w[3]              ; out0             ;
; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode52w[2]           ; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode52w[2]              ; out0             ;
; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode63w[3]           ; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode63w[3]              ; out0             ;
; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode63w[2]           ; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode63w[2]              ; out0             ;
; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode74w[3]           ; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode74w[3]              ; out0             ;
; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode74w[2]           ; |stack|lpm_decode3:inst14|lpm_decode:lpm_decode_component|decode_u7f:auto_generated|w_anode74w[2]              ; out0             ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[1]                                           ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[1]                                              ; out              ;
; |stack|lpm_compare3:inst26|lpm_compare:lpm_compare_component|cmpr_h8j:auto_generated|aneb_result_wire[0]    ; |stack|lpm_compare3:inst26|lpm_compare:lpm_compare_component|cmpr_h8j:auto_generated|aneb_result_wire[0]       ; out0             ;
; |stack|lpm_compare3:inst26|lpm_compare:lpm_compare_component|cmpr_h8j:auto_generated|data_wire[0]           ; |stack|lpm_compare3:inst26|lpm_compare:lpm_compare_component|cmpr_h8j:auto_generated|data_wire[0]              ; out0             ;
; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|counter_comb_bita0   ; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|counter_comb_bita0      ; sumout           ;
; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|counter_comb_bita0   ; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|counter_comb_bita0~COUT ; cout             ;
; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|counter_comb_bita1   ; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|counter_comb_bita1      ; sumout           ;
; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|counter_comb_bita1   ; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|counter_comb_bita1~COUT ; cout             ;
; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|counter_comb_bita2   ; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|counter_comb_bita2      ; sumout           ;
; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|counter_reg_bit1a[2] ; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|safe_q[2]               ; regout           ;
; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|counter_reg_bit1a[1] ; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|safe_q[1]               ; regout           ;
; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|counter_reg_bit1a[0] ; |stack|lpm_counterStak:inst8|lpm_counter:lpm_counter_component|cntr_4dg:auto_generated|safe_q[0]               ; regout           ;
; |stack|lpm_compare2:inst11|lpm_compare:lpm_compare_component|cmpr_lni:auto_generated|aneb_result_wire[0]    ; |stack|lpm_compare2:inst11|lpm_compare:lpm_compare_component|cmpr_lni:auto_generated|aneb_result_wire[0]       ; out0             ;
; |stack|lpm_compare2:inst11|lpm_compare:lpm_compare_component|cmpr_lni:auto_generated|data_wire[0]           ; |stack|lpm_compare2:inst11|lpm_compare:lpm_compare_component|cmpr_lni:auto_generated|data_wire[0]              ; out0             ;
+-------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                                                   ;
+--------------------------------------------------------------------+--------------------------------------------------------------------+------------------+
; Node Name                                                          ; Output Port Name                                                   ; Output Port Type ;
+--------------------------------------------------------------------+--------------------------------------------------------------------+------------------+
; |stack|out[14]                                                     ; |stack|out[14]                                                     ; pin_out          ;
; |stack|out[13]                                                     ; |stack|out[13]                                                     ; pin_out          ;
; |stack|out[12]                                                     ; |stack|out[12]                                                     ; pin_out          ;
; |stack|out[11]                                                     ; |stack|out[11]                                                     ; pin_out          ;
; |stack|out[10]                                                     ; |stack|out[10]                                                     ; pin_out          ;
; |stack|out[9]                                                      ; |stack|out[9]                                                      ; pin_out          ;
; |stack|out[8]                                                      ; |stack|out[8]                                                      ; pin_out          ;
; |stack|out[7]                                                      ; |stack|out[7]                                                      ; pin_out          ;
; |stack|out[6]                                                      ; |stack|out[6]                                                      ; pin_out          ;
; |stack|out[5]                                                      ; |stack|out[5]                                                      ; pin_out          ;
; |stack|out[4]                                                      ; |stack|out[4]                                                      ; pin_out          ;
; |stack|out~0                                                       ; |stack|out~0                                                       ; out0             ;
; |stack|out~1                                                       ; |stack|out~1                                                       ; out0             ;
; |stack|out~2                                                       ; |stack|out~2                                                       ; out0             ;
; |stack|out~3                                                       ; |stack|out~3                                                       ; out0             ;
; |stack|out~4                                                       ; |stack|out~4                                                       ; out0             ;
; |stack|out~5                                                       ; |stack|out~5                                                       ; out0             ;
; |stack|out~6                                                       ; |stack|out~6                                                       ; out0             ;
; |stack|out~7                                                       ; |stack|out~7                                                       ; out0             ;
; |stack|out~8                                                       ; |stack|out~8                                                       ; out0             ;
; |stack|out~9                                                       ; |stack|out~9                                                       ; out0             ;
; |stack|out~10                                                      ; |stack|out~10                                                      ; out0             ;
; |stack|data[14]                                                    ; |stack|data[14]                                                    ; out              ;
; |stack|data[13]                                                    ; |stack|data[13]                                                    ; out              ;
; |stack|data[12]                                                    ; |stack|data[12]                                                    ; out              ;
; |stack|data[11]                                                    ; |stack|data[11]                                                    ; out              ;
; |stack|data[10]                                                    ; |stack|data[10]                                                    ; out              ;
; |stack|data[9]                                                     ; |stack|data[9]                                                     ; out              ;
; |stack|data[8]                                                     ; |stack|data[8]                                                     ; out              ;
; |stack|data[7]                                                     ; |stack|data[7]                                                     ; out              ;
; |stack|data[6]                                                     ; |stack|data[6]                                                     ; out              ;
; |stack|data[5]                                                     ; |stack|data[5]                                                     ; out              ;
; |stack|data[4]                                                     ; |stack|data[4]                                                     ; out              ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[14]             ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[14]             ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[13]             ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[13]             ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[12]             ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[12]             ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[11]             ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[11]             ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[10]             ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[10]             ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[9]              ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[9]              ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[8]              ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[8]              ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[7]              ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[7]              ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[6]              ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[6]              ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[5]              ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[5]              ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[4]              ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[4]              ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[2]              ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[2]              ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[1]              ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[1]              ; regout           ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[14] ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[14] ; out              ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[13] ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[13] ; out              ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[12] ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[12] ; out              ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[11] ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[11] ; out              ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[10] ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[10] ; out              ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[9]  ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[9]  ; out              ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[8]  ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[8]  ; out              ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[7]  ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[7]  ; out              ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[6]  ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[6]  ; out              ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[5]  ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[5]  ; out              ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[4]  ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[4]  ; out              ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[2]  ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[2]  ; out              ;
; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[1]  ; |stack|lpm_bustri0:inst25|lpm_bustri:lpm_bustri_component|dout[1]  ; out              ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[14]             ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[14]             ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[13]             ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[13]             ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[12]             ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[12]             ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[11]             ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[11]             ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[10]             ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[10]             ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[9]              ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[9]              ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[8]              ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[8]              ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[7]              ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[7]              ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[6]              ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[6]              ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[5]              ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[5]              ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[4]              ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[4]              ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[3]              ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[3]              ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[0]              ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[0]              ; regout           ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[14] ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[14] ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[13] ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[13] ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[12] ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[12] ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[11] ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[11] ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[10] ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[10] ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[9]  ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[9]  ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[8]  ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[8]  ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[7]  ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[7]  ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[6]  ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[6]  ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[5]  ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[5]  ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[4]  ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[4]  ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[3]  ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[3]  ; out              ;
; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[0]  ; |stack|lpm_bustri0:inst23|lpm_bustri:lpm_bustri_component|dout[0]  ; out              ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[14]             ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[14]             ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[13]             ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[13]             ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[12]             ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[12]             ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[11]             ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[11]             ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[10]             ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[10]             ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[9]              ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[9]              ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[8]              ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[8]              ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[7]              ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[7]              ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[6]              ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[6]              ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[5]              ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[5]              ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[4]              ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[4]              ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[3]              ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[3]              ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[1]              ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[1]              ; regout           ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[14] ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[14] ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[13] ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[13] ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[12] ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[12] ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[11] ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[11] ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[10] ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[10] ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[9]  ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[9]  ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[8]  ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[8]  ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[7]  ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[7]  ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[6]  ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[6]  ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[5]  ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[5]  ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[4]  ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[4]  ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[3]  ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[3]  ; out              ;
; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[1]  ; |stack|lpm_bustri0:inst21|lpm_bustri:lpm_bustri_component|dout[1]  ; out              ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[14]             ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[14]             ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[13]             ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[13]             ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[12]             ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[12]             ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[11]             ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[11]             ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[10]             ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[10]             ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[9]              ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[9]              ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[8]              ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[8]              ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[7]              ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[7]              ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[6]              ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[6]              ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[5]              ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[5]              ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[4]              ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[4]              ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[3]              ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[3]              ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[1]              ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[1]              ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[0]              ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[0]              ; regout           ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[14] ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[14] ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[13] ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[13] ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[12] ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[12] ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[11] ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[11] ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[10] ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[10] ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[9]  ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[9]  ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[8]  ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[8]  ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[7]  ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[7]  ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[6]  ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[6]  ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[5]  ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[5]  ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[4]  ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[4]  ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[3]  ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[3]  ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[1]  ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[1]  ; out              ;
; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[0]  ; |stack|lpm_bustri0:inst19|lpm_bustri:lpm_bustri_component|dout[0]  ; out              ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[14]             ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[14]             ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[13]             ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[13]             ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[12]             ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[12]             ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[11]             ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[11]             ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[10]             ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[10]             ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[9]              ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[9]              ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[8]              ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[8]              ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[7]              ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[7]              ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[6]              ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[6]              ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[5]              ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[5]              ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[4]              ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[4]              ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[3]              ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[3]              ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[2]              ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[2]              ; regout           ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[14] ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[14] ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[13] ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[13] ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[12] ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[12] ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[11] ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[11] ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[10] ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[10] ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[9]  ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[9]  ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[8]  ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[8]  ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[7]  ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[7]  ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[6]  ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[6]  ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[5]  ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[5]  ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[4]  ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[4]  ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[3]  ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[3]  ; out              ;
; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[2]  ; |stack|lpm_bustri0:inst16|lpm_bustri:lpm_bustri_component|dout[2]  ; out              ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[14]               ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[14]               ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[13]               ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[13]               ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[12]               ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[12]               ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[11]               ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[11]               ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[10]               ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[10]               ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[9]                ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[9]                ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[8]                ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[8]                ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[7]                ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[7]                ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[6]                ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[6]                ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[5]                ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[5]                ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[4]                ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[4]                ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[3]                ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[3]                ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[2]                ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[2]                ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[0]                ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[0]                ; regout           ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[14] ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[14] ; out              ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[13] ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[13] ; out              ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[12] ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[12] ; out              ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[11] ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[11] ; out              ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[10] ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[10] ; out              ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[9]  ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[9]  ; out              ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[8]  ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[8]  ; out              ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[7]  ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[7]  ; out              ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[6]  ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[6]  ; out              ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[5]  ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[5]  ; out              ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[4]  ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[4]  ; out              ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[3]  ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[3]  ; out              ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[2]  ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[2]  ; out              ;
; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[0]  ; |stack|lpm_bustri0:inst15|lpm_bustri:lpm_bustri_component|dout[0]  ; out              ;
+--------------------------------------------------------------------+--------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                           ;
+--------------------------------------------------------+--------------------------------------------------------+------------------+
; Node Name                                              ; Output Port Name                                       ; Output Port Type ;
+--------------------------------------------------------+--------------------------------------------------------+------------------+
; |stack|data[14]                                        ; |stack|data[14]                                        ; out              ;
; |stack|data[13]                                        ; |stack|data[13]                                        ; out              ;
; |stack|data[12]                                        ; |stack|data[12]                                        ; out              ;
; |stack|data[11]                                        ; |stack|data[11]                                        ; out              ;
; |stack|data[10]                                        ; |stack|data[10]                                        ; out              ;
; |stack|data[9]                                         ; |stack|data[9]                                         ; out              ;
; |stack|data[8]                                         ; |stack|data[8]                                         ; out              ;
; |stack|data[7]                                         ; |stack|data[7]                                         ; out              ;
; |stack|data[6]                                         ; |stack|data[6]                                         ; out              ;
; |stack|data[5]                                         ; |stack|data[5]                                         ; out              ;
; |stack|data[4]                                         ; |stack|data[4]                                         ; out              ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[14] ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[14] ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[13] ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[13] ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[12] ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[12] ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[11] ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[11] ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[10] ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[10] ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[9]  ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[9]  ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[8]  ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[8]  ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[7]  ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[7]  ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[6]  ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[6]  ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[5]  ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[5]  ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[4]  ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[4]  ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[2]  ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[2]  ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[1]  ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[1]  ; regout           ;
; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[0]  ; |stack|lpm_reg:inst24|lpm_ff:lpm_ff_component|dffs[0]  ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[14] ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[14] ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[13] ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[13] ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[12] ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[12] ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[11] ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[11] ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[10] ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[10] ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[9]  ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[9]  ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[8]  ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[8]  ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[7]  ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[7]  ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[6]  ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[6]  ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[5]  ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[5]  ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[4]  ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[4]  ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[3]  ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[3]  ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[2]  ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[2]  ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[1]  ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[1]  ; regout           ;
; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[0]  ; |stack|lpm_reg:inst22|lpm_ff:lpm_ff_component|dffs[0]  ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[14] ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[14] ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[13] ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[13] ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[12] ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[12] ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[11] ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[11] ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[10] ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[10] ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[9]  ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[9]  ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[8]  ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[8]  ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[7]  ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[7]  ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[6]  ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[6]  ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[5]  ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[5]  ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[4]  ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[4]  ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[3]  ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[3]  ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[2]  ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[2]  ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[1]  ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[1]  ; regout           ;
; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[0]  ; |stack|lpm_reg:inst20|lpm_ff:lpm_ff_component|dffs[0]  ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[14] ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[14] ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[13] ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[13] ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[12] ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[12] ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[11] ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[11] ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[10] ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[10] ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[9]  ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[9]  ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[8]  ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[8]  ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[7]  ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[7]  ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[6]  ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[6]  ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[5]  ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[5]  ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[4]  ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[4]  ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[3]  ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[3]  ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[2]  ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[2]  ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[1]  ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[1]  ; regout           ;
; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[0]  ; |stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[0]  ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[14] ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[14] ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[13] ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[13] ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[12] ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[12] ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[11] ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[11] ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[10] ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[10] ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[9]  ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[9]  ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[8]  ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[8]  ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[7]  ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[7]  ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[6]  ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[6]  ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[5]  ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[5]  ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[4]  ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[4]  ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[3]  ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[3]  ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[2]  ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[2]  ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[1]  ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[1]  ; regout           ;
; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[0]  ; |stack|lpm_reg:inst17|lpm_ff:lpm_ff_component|dffs[0]  ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[14]   ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[14]   ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[13]   ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[13]   ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[12]   ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[12]   ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[11]   ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[11]   ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[10]   ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[10]   ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[9]    ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[9]    ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[8]    ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[8]    ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[7]    ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[7]    ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[6]    ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[6]    ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[5]    ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[5]    ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[4]    ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[4]    ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[3]    ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[3]    ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[2]    ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[2]    ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[1]    ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[1]    ; regout           ;
; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[0]    ; |stack|lpm_reg:inst|lpm_ff:lpm_ff_component|dffs[0]    ; regout           ;
+--------------------------------------------------------+--------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II Simulator
    Info: Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition
    Info: Processing started: Sun May 14 21:14:32 2017
Info: Command: quartus_sim --read_settings_files=on --write_settings_files=off cursach -c cursach
Info: Using vector source file "D:/SIFO/cursach/stack.vwf"
Info: Overwriting simulation input file with simulation results
    Info: A backup of stack.vwf called cursach.sim_ori.vwf has been created in the db folder
Info: Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info: Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Warning: Found clock-sensitive change during active clock edge at time 260.0 ns on register "|stack|lpm_reg:inst18|lpm_ff:lpm_ff_component|dffs[0]"
Info: Simulation partitioned into 1 sub-simulations
Info: Simulation coverage is      22.90 %
Info: Number of transitions in simulation is 1290
Info: Vector file stack.vwf is saved in VWF text format. You can compress it into CVWF format in order to reduce file size. For more details please refer to the Quartus II Help.
Info: Quartus II Simulator was successful. 0 errors, 1 warning
    Info: Peak virtual memory: 161 megabytes
    Info: Processing ended: Sun May 14 21:14:32 2017
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:01


